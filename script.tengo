/*

This is a minimal example of how to write a Tengo script to control fetching request
- Documentation: https://tengolang.com/

======================

In this script,

- URL "https://www.youtubetrimmer.com/view/?v=X" will be rewritten to "https://youtu.be/X"
    For example: "https://www.youtubetrimmer.com/view/?v=dQw4w9WgXcQ"
- Typing "gh:orgId/repoId[/branch]" will download the zip file of the repo at given branch (defaults to master)
    For example: "gh:d5/tengo", "gh:anhcraft/ytb-downloader/main"

while leave the rest URLs unchanged.

======================

DEVELOPMENT TIPS:
- The script is automatically re-loaded whenever you click "Fetch" button
- You can use "fmt" module to print messages to the console (not to the log file)

*/

url := import("url")
fmt := import("fmt")
txt := import("text")

// Output variables
_action := "default"
_value := _input
_filepath := ""

process := func(input) {
    if txt.has_prefix(input, "gh:") {
        input = input[3:]
        args := txt.split(input, "/")
        orgId := args[0]
        repoId := args[1]
        branch := "master"

        if len(args) > 2 {
            branch = args[2]
        }

        _action = "custom"
        _value = "https://github.com/" + orgId + "/" + repoId + "/archive/refs/heads/" + branch +".zip"

        // You can specify subdirectory here. They are automatically created
        _filepath = "@" + orgId + "/" + repoId + "/" + branch + ".zip"

        fmt.println("Custom downloading GitHub source", input, "into", _filepath)

        return
    }

    domain := url.extractDomain(input)
    path := url.extractPath(input)
    query := url.extractQuery(input)

    if domain == "www.youtubetrimmer.com" {
        if query["v"] != undefined && len(query["v"]) > 0 {
            videoID := query["v"][0]
            newURL := "https://youtu.be/" + videoID
            _action = "override"
            _value = newURL
            fmt.println("Rewriting", input, "to", newURL)
            return
        }
    }
}

process(_input)